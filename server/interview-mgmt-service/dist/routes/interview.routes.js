"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const interview_controller_1 = __importDefault(require("../controllers/interview.controller"));
const interview_service_1 = __importDefault(require("../services/interview.service"));
const interview_repository_1 = __importDefault(require("../repositories/interview.repository"));
const aptitude_service_1 = __importDefault(require("../services/aptitude.service"));
const questions_repository_1 = __importDefault(require("../repositories/questions.repository"));
const aptitudeTestResult_repository_1 = __importDefault(require("../repositories/aptitudeTestResult.repository"));
const EmployeeInterviewsRepository_1 = __importDefault(require("../repositories/EmployeeInterviewsRepository"));
// import CandidateResponseRepository from "../repositories/candidateResponse.repository";
// import { InterviewRoundRepository } from "../repositories/interviewRound.repository";
const router = express_1.default.Router();
const interviewRepo = new interview_repository_1.default();
const questionRepo = new questions_repository_1.default();
const aptitudeResultRepo = new aptitudeTestResult_repository_1.default();
const employeeInterviewsRepo = new EmployeeInterviewsRepository_1.default();
const interviewServer = new interview_service_1.default(interviewRepo, employeeInterviewsRepo);
const aptitudeServer = new aptitude_service_1.default(questionRepo, interviewRepo, aptitudeResultRepo);
const interviewController = new interview_controller_1.default(interviewServer, aptitudeServer);
// const responseRepo = new CandidateResponseRepository();
// const interviewRoundRepo = new InterviewRoundRepository();
// const submitAptitudeTest = new SubmitAptitudeTest(interviewRepo, responseRepo,interviewRoundRepo);
// const aptitudeTestService = new AptitudeTestService(submitAptitudeTest,responseRepo,interviewRepo,interviewRoundRepo);
// const aptitudeTestController = new AptitudeTestController(aptitudeTestService);
router.get("/", interviewController.getApplicationsCandidate);
router.post("/apply", interviewController.applyJob);
router.get("/schedule", interviewController.fetchScheduleInterviews);
router.post("/schedule", interviewController.scheduleInterview);
router.get("/status/:id", interviewController.getApplicationStatus);
router.get("/company-applications", interviewController.getAllApplications);
router.post("/submit-video-call-interview", interviewController.submitVideoInterview);
router.get("/:interviewId", interviewController.getInterview);
// router.get("/status/:jobId", interviewController.fetchAppliedJobStatus);
exports.default = router;
